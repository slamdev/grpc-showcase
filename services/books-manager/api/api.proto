syntax = "proto3";

package booksmanager;

option go_package = ".;api";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service BooksManager {
  // Returns a list of books on a shelf.
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    // Client example - list the books from the first shelf:
    //   curl http://DOMAIN_NAME/v1/shelves/1/books
    option (google.api.http) = {get: "/v1/shelves/{shelf}/books"};
  }
  // Creates a new book.
  rpc CreateBook(CreateBookRequest) returns (Book) {
    // Client example - create a new book in the first shelf:
    //   curl -d '{"author":"foo","title":"bar"}' http://DOMAIN_NAME/v1/shelves/1/books
    option (google.api.http) = {
      post: "/v1/shelves/{shelf}/books"
      body: "book"
    };
  }
  // Returns a specific book.
  rpc GetBook(GetBookRequest) returns (Book) {
    // Client example - get the first book from the second shelf:
    //   curl http://DOMAIN_NAME/v1/shelves/2/books/1
    option (google.api.http) = {get: "/v1/shelves/{shelf}/books/{book}"};
  }
  // Deletes a book from a shelf.
  rpc DeleteBook(DeleteBookRequest) returns (google.protobuf.Empty) {
    // Client example - delete the first book from the first shelf:
    //   curl -X DELETE http://DOMAIN_NAME/v1/shelves/1/books/1
    option (google.api.http) = {delete: "/v1/shelves/{shelf}/books/{book}"};
  }
}

// A book resource.
message Book {
  // A unique book id.
  int64 id = 1;
  // An author of the book.
  string author = 2;
  // A book title.
  string title = 3;
}

// Request message for ListBooks method.
message ListBooksRequest {
  // ID of the shelf which books to list.
  int64 shelf = 1;
}

// Response message to ListBooks method.
message ListBooksResponse {
  // The books on the shelf.
  repeated Book books = 1;
}

// Request message for CreateBook method.
message CreateBookRequest {
  // The ID of the shelf on which to create a book.
  int64 shelf = 1;
  // A book resource to create on the shelf.
  Book book = 2;
}

// Request message for GetBook method.
message GetBookRequest {
  // The ID of the shelf from which to retrieve a book.
  int64 shelf = 1;
  // The ID of the book to retrieve.
  int64 book = 2;
}

// Request message for DeleteBook method.
message DeleteBookRequest {
  // The ID of the shelf from which to delete a book.
  int64 shelf = 1;
  // The ID of the book to delete.
  int64 book = 2;
}
